"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5223],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=r.createContext({}),o=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=o(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=o(t),d=s,g=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return t?r.createElement(g,a(a({ref:n},m),{},{components:t})):r.createElement(g,a({ref:n},m))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:s,a[1]=l;for(var o=2;o<i;o++)a[o]=t[o];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var r=t(7462),s=(t(7294),t(3905));const i={title:"[typescript] TypeScript \u57fa\u790e (\u4f7f\u7528 Vite \u5efa\u7acb\u74b0\u5883)",keywords:["javascript","typescript"],description:"\u5beb\u7d66\u81ea\u5df1\u770b\u7684 TypeScript \u57fa\u790e\u7b46\u8a18 (Union\u3001Tuple\u3001Objects\u3001Type\u3001Interface\u3001Extends\u3001Type Aliases\u3001Literal Types\u3001Assertions\u3001Utility Types)",author:"WeiYun0912","og:title":"[typescript] TypeScript \u57fa\u790e (\u4f7f\u7528 Vite \u5efa\u7acb\u74b0\u5883)","og:description":"\u5beb\u7d66\u81ea\u5df1\u770b\u7684 TypeScript \u57fa\u790e\u7b46\u8a18 (Union\u3001Tuple\u3001Objects\u3001Type\u3001Interface\u3001Extends\u3001Type Aliases\u3001Literal Types\u3001Assertions\u3001Utility Types)",sidebar_position:1},a=void 0,l={unversionedId:"TypeScript/TypeScript-Basic",id:"TypeScript/TypeScript-Basic",title:"[typescript] TypeScript \u57fa\u790e (\u4f7f\u7528 Vite \u5efa\u7acb\u74b0\u5883)",description:"\u5beb\u7d66\u81ea\u5df1\u770b\u7684 TypeScript \u57fa\u790e\u7b46\u8a18 (Union\u3001Tuple\u3001Objects\u3001Type\u3001Interface\u3001Extends\u3001Type Aliases\u3001Literal Types\u3001Assertions\u3001Utility Types)",source:"@site/docs/TypeScript/TypeScript-Basic.md",sourceDirName:"TypeScript",slug:"/TypeScript/TypeScript-Basic",permalink:"/Wei-Docusaurus/docs/TypeScript/TypeScript-Basic",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"[typescript] TypeScript \u57fa\u790e (\u4f7f\u7528 Vite \u5efa\u7acb\u74b0\u5883)",keywords:["javascript","typescript"],description:"\u5beb\u7d66\u81ea\u5df1\u770b\u7684 TypeScript \u57fa\u790e\u7b46\u8a18 (Union\u3001Tuple\u3001Objects\u3001Type\u3001Interface\u3001Extends\u3001Type Aliases\u3001Literal Types\u3001Assertions\u3001Utility Types)",author:"WeiYun0912","og:title":"[typescript] TypeScript \u57fa\u790e (\u4f7f\u7528 Vite \u5efa\u7acb\u74b0\u5883)","og:description":"\u5beb\u7d66\u81ea\u5df1\u770b\u7684 TypeScript \u57fa\u790e\u7b46\u8a18 (Union\u3001Tuple\u3001Objects\u3001Type\u3001Interface\u3001Extends\u3001Type Aliases\u3001Literal Types\u3001Assertions\u3001Utility Types)",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"[blender] Blender \u6307\u4ee4\u7b46\u8a18",permalink:"/Wei-Docusaurus/docs/Blender/Blender-Shotcur"}},p={},o=[{value:"\u8aaa\u660e",id:"\u8aaa\u660e",level:2},{value:"Union",id:"union",level:2},{value:"Tuple",id:"tuple",level:2},{value:"Objects &amp; type",id:"objects--type",level:2},{value:"Interface &amp; Extends",id:"interface--extends",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Literal Types",id:"literal-types",level:2},{value:"Function",id:"function",level:2},{value:"Assertions",id:"assertions",level:2},{value:"Index Signatures &amp; keyof Assertions",id:"index-signatures--keyof-assertions",level:2},{value:"Utility Types",id:"utility-types",level:2},{value:"Partial",id:"partial",level:3},{value:"Required",id:"required",level:3},{value:"Record",id:"record",level:3},{value:"Pick",id:"pick",level:3},{value:"Omit",id:"omit",level:3},{value:"Exclude",id:"exclude",level:3},{value:"Extract",id:"extract",level:3},{value:"NonNullable",id:"nonnullable",level:3}],m={toc:o};function u(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"\u8aaa\u660e"},"\u8aaa\u660e"),(0,s.kt)("p",null,"\u8981\u5feb\u901f\u5efa\u7acb TypeScript \u7684\u5c08\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528 Vite\uff0c\u5728 Terminal \u8f38\u5165\u4ee5\u4e0b\u7684\u6307\u4ee4\u5373\u53ef\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"npm create vite@latest \u4f60\u7684\u5c08\u6848\u540d\u7a31 -- --template vanilla-ts\n")),(0,s.kt)("p",null,"\u63a5\u8457\u5207\u63db\u5230\u4f60\u7684\u5c08\u6848\u76ee\u9304\uff0c\u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4\uff0c\u5c31\u628a\u57fa\u672c\u7684\u74b0\u5883\u5efa\u7f6e\u597d\u4e86\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"npm install\n")),(0,s.kt)("p",null,"\u5c07\u74b0\u5883 Run \u8d77\u4f86\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"npm run dev\n")),(0,s.kt)("h2",{id:"union"},"Union"),(0,s.kt)("p",null,"\u8981\u8b93\u4e00\u500b\u8b8a\u6578\u64c1\u6709\u591a\u7a2e\u7684\u578b\u614b\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Union"),"\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},"let userId: string | number = \"\"; // userId \u53ea\u80fd\u662f string \u6216 number \u578b\u614b\nuserId = true; //Type 'boolean' is not assignable to type 'string | number'.\n")),(0,s.kt)("h2",{id:"tuple"},"Tuple"),(0,s.kt)("p",null,"\u5982\u679c\u8981\u56b4\u8b39\u7684\u5b9a\u7fa9\u9663\u5217\u5167\u7684\u8b8a\u6578\u578b\u614b\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Tuple"),"\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},"let mixed: [string, number, boolean] = [\"Wei\", 123, true];\n\nmixed[0] = 123; // Type 'number' is not assignable to type 'string'.\n")),(0,s.kt)("h2",{id:"objects--type"},"Objects & type"),(0,s.kt)("p",null,"\u5b9a\u7fa9 Object \u5167\u7684 Type \u53ef\u4ee5\u5148\u5275\u5efa\u4e00\u500b\u6a23\u677f\uff0c\u53ea\u8981\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," \u95dc\u9375\u5b57\u5373\u53ef\uff0c\u5176\u4ed6\u8b8a\u6578\u8981\u4f7f\u7528\u8a72\u6a23\u677f\u7684\u8a71\u5fc5\u9808\u9075\u5faa\u88e1\u9762\u5b9a\u7fa9\u7684 Type\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},'type Person = {\n  name: string;\n  age: number;\n  friends: (string | number)[];\n};\n\nlet Wei: Person = {\n  name: "Wei",\n  age: 25,\n  friends: [1, 2, 3],\n};\n\nlet Yun: Person = {\n  name: "Wei",\n  age: "26", // Type \'string\' is not assignable to type \'number\'.\n  friends: [1, 2, 3],\n};\n')),(0,s.kt)("p",null,"\u53e6\u5916\uff0c\u5982\u679c\u4f7f\u7528\u4e86 ",(0,s.kt)("inlineCode",{parentName:"p"},"Person")," \u7576\u4f5c\u6a23\u677f\uff0c\u8b8a\u6578\u4e5f\u90fd\u9700\u8981\u5c07 Person \u6709\u7684\u5c6c\u6027\u5b9a\u7fa9\u51fa\u4f86\uff0c\u4e0d\u7136\u540c\u6a23\u6703\u767c\u751f\u932f\u8aa4\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},"type Person = {\n  name: string;\n  age: number;\n  friends: (string | number)[];\n};\n\n// Property 'friends' is missing in type '{ name: string; age: number; }' but required in type 'Person'.\nlet Wei: Person = {\n  name: \"Wei\",\n  age: 25,\n};\n")),(0,s.kt)("p",null,"\u9019\u6a23\u5beb\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u70ba ",(0,s.kt)("inlineCode",{parentName:"p"},"Person")," \u5167\u6c92\u6709 ",(0,s.kt)("inlineCode",{parentName:"p"},"email")," \u9019\u500b\u5c6c\u6027\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},"type Person = {\n  name: string;\n  age: number;\n  friends: (string | number)[];\n};\n\nlet Wei: Person = {\n  name: \"Wei\",\n  age: 25,\n  friends: [1, 2, 3],\n  email: \"test@gmail.com\", // { email: string; }' is not assignable to type 'Person'\n};\n\nWei.email = \"test@gmail.com\"; // Property 'email' does not exist on type 'Person'.\n")),(0,s.kt)("p",null,"\u4f46\u6211\u5011\u53ef\u4ee5\u8b93 ",(0,s.kt)("inlineCode",{parentName:"p"},"Person")," \u5167\u7684\u5c6c\u6027\u8b8a\u70ba\u53ef\u9078\u7684\uff0c\u53ea\u8981\u5728\u5c6c\u6027\u540d\u7a31\u5f8c\u52a0\u4e0a ",(0,s.kt)("inlineCode",{parentName:"p"},"?")," \u5373\u53ef\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},'type Person = {\n  name: string;\n  age: number;\n  friends: (string | number)[];\n  email?: string;\n};\n\nlet Wei: Person = {\n  name: "Wei",\n  age: 25,\n  friends: [1, 2, 3],\n};\n')),(0,s.kt)("h2",{id:"interface--extends"},"Interface & Extends"),(0,s.kt)("p",null,"\u5047\u8a2d\u6211\u5011\u6709\u5169\u7a2e\u578b\u614b\u9700\u8981\u5b9a\u7fa9\uff0c",(0,s.kt)("inlineCode",{parentName:"p"},"Person")," \u548c ",(0,s.kt)("inlineCode",{parentName:"p"},"Employee"),"\uff0c\u5c0d\u67d0\u4e9b\u7269\u4ef6\u4f86\u8aaa\u53ef\u80fd\u53ea\u6703\u7528\u5230 Person \u5167\u5b9a\u7fa9\u7684\u5c6c\u6027\uff0c\u4e26\u4e0d\u6703\u4f7f\u7528\u5230 Employee \u5167\u5b9a\u7fa9\u7684\u5c6c\u6027\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},"type Person = {\n  personName: string;\n  age: number;\n  friends: (string | number)[];\n  email?: string;\n};\n\ntype Employee = {\n  employeeName: string;\n  salary: number;\n};\n")),(0,s.kt)("p",null,"\u9019\u6642\u5019\u5982\u679c\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," \u4f86\u5be6\u4f5c\u7684\u8a71\uff0c\u53ef\u4ee5\u5beb\u6210\u9019\u6a23\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers',title:'"src/main.ts"',showLineNumbers:!0},'type Person = {\n  personName: string;\n  age: number;\n  friends: (string | number)[];\n  email?: string;\n};\n\ntype Employee = {\n  employeeName: string;\n  salary: number;\n};\n\ntype PersonEmployee = Person & Employee {\n\nlet Wei: PersonEmployee = {\n  personName: "Wei",\n  age: 25,\n  friends: [1, 2, 3],\n  employeeName: "front-end developer",\n  salary: 50000,\n};\n')),(0,s.kt)("p",null,"\u4f46\u554f\u984c\u51fa\u73fe\u4e86\uff0c\u5982\u679c\u6211\u5011\u60f3\u8981\u8b93 ",(0,s.kt)("inlineCode",{parentName:"p"},"PersonEmployee")," \u4e5f\u6709\u81ea\u5df1\u7684\u5c6c\u6027\u7684\u8a71\u8a72\u600e\u9ebc\u8fa6\uff1f"),(0,s.kt)("p",null,"\u7b54\u6848\u662f\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"interface")," \u53d6\u4ee3 ",(0,s.kt)("inlineCode",{parentName:"p"},"type"),"\uff0c\u4e26\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"extends")," \u5ef6\u4f38\u5176\u4ed6\u5148\u524d\u5b9a\u7fa9\u7684\u5c6c\u6027\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/main.ts" showLineNumbers {13}',title:'"src/main.ts"',showLineNumbers:!0,"{13}":!0},'interface Person = {\n  personName: string;\n  age: number;\n  friends: (string | number)[];\n  email?: string;\n};\n\ninterface Employee = {\n  employeeName: string;\n  salary: number;\n};\n\ninterface PersonEmployee extends Person, Employee {\n  bossName?: string;\n}\n\nlet Wei: PersonEmployee = {\n  personName: "Wei",\n  age: 25,\n  friends: [1, 2, 3],\n  employeeName: "front-end developer",\n  salary: 50000,\n  bossName: "Yun",\n};\n')),(0,s.kt)("p",null,"\u6240\u4ee5\u53ef\u4ee5\u9019\u6a23\u8aaa\uff0c ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," \u8f03\u5c6c\u65bc\u975c\u614b\u5b9a\u7fa9\uff0c\u800c ",(0,s.kt)("inlineCode",{parentName:"p"},"interface")," \u5247\u53ef\u4ee5\u642d\u914d ",(0,s.kt)("inlineCode",{parentName:"p"},"extends")," \u4f86\u9054\u5230\u52d5\u614b\u5b9a\u7fa9\u3002"),(0,s.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,s.kt)("p",null,"\u5982\u679c\u6709\u91cd\u8907\u7684\u578b\u614b\u5b9a\u7fa9\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," \u5c07\u578b\u614b\u5132\u5b58\u6210\u4e00\u500b\u6a23\u677f\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"type stringOrNumber = string | number;\ntype stringOrNumberArray = (string | number)[];\n\ntype Person = {\n  id: stringOrNumber;\n  friends: stringOrNumberArray;\n};\n")),(0,s.kt)("h2",{id:"literal-types"},"Literal Types"),(0,s.kt)("p",null,"\u6211\u5011\u4e5f\u53ef\u4ee5\u6307\u5b9a\u8b8a\u6578\u80fd\u586b\u5beb\u7684\u503c\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'let username: "Wei" | "Yun" | "John";\n//Type \'"Alex"\' is not assignable to type \'"Wei" | "Yun" | "John"\'.\nusername = "Alex"; //\n')),(0,s.kt)("h2",{id:"function"},"Function"),(0,s.kt)("p",null,"\u5982\u679c Function \u9700\u8981\u63a5\u6536\u5916\u90e8\u53c3\u6578\uff0c\u5247\u9700\u8981\u5b9a\u7fa9\u53c3\u6578\u7684\u578b\u614b\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"//Parameter 'a' implicitly has an 'any' type.\n//Parameter 'b' implicitly has an 'any' type.\nconst add = (a, b) => {\n  return a + b;\n};\n")),(0,s.kt)("p",null,"\u9700\u66f4\u6539\u6210\u9019\u6a23\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"const add = (a: number, b: number) => {\n  return a + b;\n};\n")),(0,s.kt)("p",null,"\u4e5f\u53ef\u4ee5\u6307\u5b9a Function \u7684\u56de\u50b3\u503c\u578b\u614b\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"const add = (a: number, b: number): number => {\n  return a + b;\n};\n")),(0,s.kt)("p",null,"\u5982\u679c\u6c92\u6709\u4efb\u4f55\u56de\u50b3\u503c\u7684\u8a71\uff0c\u53ef\u4ee5\u5beb\u6210 ",(0,s.kt)("inlineCode",{parentName:"p"},"void"),"\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"const log = (message: any): void => {\n  console.log(message);\n};\n")),(0,s.kt)("p",null,"\u4e5f\u53ef\u4ee5\u66f4\u6539\u6210 ",(0,s.kt)("inlineCode",{parentName:"p"},"Type Aliases")," \u7684\u65b9\u5f0f\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"type addFunction = (a: number, b: number) => number;\n\nconst add: addFunction = (a, b) => {\n  return a + b;\n};\n")),(0,s.kt)("p",null,"\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"interface")," \u4f86\u5beb\u7684\u8a71\uff0c\u5247\u5beb\u6210\u4ee5\u4e0b\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"interface addFunction {\n  (a: number, b: number): number;\n}\n\nconst add: addFunction = (a, b) => {\n  return a + b;\n};\n")),(0,s.kt)("p",null,"Function \u63a5\u6536\u7684\u5916\u90e8\u53c3\u6578\uff0c\u53ef\u4ee5\u7d66\u4e88\u9810\u8a2d\u503c\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"const add = (a: number = 10, b: number) => {\n  return a + b;\n};\n\nadd(undefined, 10); // 20\nadd(15, 10); // 25\n")),(0,s.kt)("p",null,"\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Rest Parameters")," \u4f86\u5c07\u50b3\u905e\u9032 Function \u7684\u53c3\u6578\u4e00\u4f75\u8655\u7406\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"const sum = (...nums: number[]) => {\n  return nums.reduce((acc, cur) => acc + cur, 0);\n};\n\nsum(1, 2, 3, 4); // 10\n")),(0,s.kt)("p",null,"\u5982\u679c\u6709\u4e00\u500b\u4e0d\u6703\u6709\u56de\u50b3\u503c\u7684 Function\uff0c\u5247 TypeScript \u6703\u81ea\u52d5\u5c07\u5b83\u5b9a\u7fa9\u70ba ",(0,s.kt)("inlineCode",{parentName:"p"},"never"),"\uff0c\u50cf\u662f ",(0,s.kt)("inlineCode",{parentName:"p"},"\u7121\u9650\u8ff4\u5708")," \u548c ",(0,s.kt)("inlineCode",{parentName:"p"},"\u932f\u8aa4\u8655\u7406"),"\u3002"),(0,s.kt)("p",null,"\u53e6\u5916\u8981\u7279\u5225\u63d0\u4e00\u9ede\uff0c",(0,s.kt)("inlineCode",{parentName:"p"},"never")," \u662f\u6240\u6709\u578b\u614b\u7684\u5b50\u578b\u614b(Bottom Type)\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"const infiniteLoop = () => {\n  let i: number = 0;\n  while (true) {\n    i++;\n  }\n};\n\nconst errorHandler = (errorMessage: any) => {\n  throw new Error(errorMessage);\n};\n")),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://i.imgur.com/aMWmnjx.png",alt:"Image"})),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://i.imgur.com/dvzW8TR.png",alt:"Image"})),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"never")," \u578b\u614b\u8f03\u5e38\u7528\u5728\u932f\u8aa4\u8655\u7406\u7684\u65b9\u9762\uff0c\u50cf\u662f ",(0,s.kt)("inlineCode",{parentName:"p"},"Type Guard"),"\uff0c\u5982\u679c\u50b3\u5165 string \u6216 number \u4ee5\u5916\u7684\u578b\u614b\uff0cTypeScript \u6703\u81ea\u52d5\u5224\u65b7\u50b3\u9032\u4f86\u7684\u578b\u614b\u5747\u70ba never\uff0c\u9019\u4e5f\u662f\u70ba\u4ec0\u9ebc\u56de\u50b3 ",(0,s.kt)("inlineCode",{parentName:"p"},"errorHandler")," \u6642\u4e0d\u6703\u767c\u751f\u932f\u8aa4\uff0c\u56e0\u70ba ",(0,s.kt)("inlineCode",{parentName:"p"},"errorHandler")," \u70ba never \u578b\u614b\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'const errorHandler = (errorMessage: any) => {\n  throw new Error(errorMessage);\n};\n\nconst numberOrString = (value: number | string): string => {\n  if (typeof value === "string") return "string";\n  if (typeof value === "number") return "number";\n  return errorHandler("Error");\n};\n')),(0,s.kt)("h2",{id:"assertions"},"Assertions"),(0,s.kt)("p",null,"\u5982\u679c\u4f7f\u7528 DOM \u65b9\u6cd5\u53bb\u53d6\u5f97\u5143\u7d20\u63a7\u5236\u6b0a\u7684\u8a71\uff0cTypeScript \u6703\u96a8\u8457\u53d6\u5f97\u7684\u65b9\u5f0f\u4e0d\u540c\u800c\u7d66\u4e88\u4e0d\u540c\u7684\u578b\u614b\u3002"),(0,s.kt)("p",null,"\u5982\u679c\u4f7f\u7528\u6307\u5b9a ID \u6216 Class \u7684\u65b9\u5f0f\u4f86\u53d6\u5f97\u5143\u7d20\uff0cTypeScript \u6703\u4e0d\u77e5\u9053\u6211\u5011\u8981\u53d6\u5f97\u7684\u662f\u54ea\u7a2e\u6a19\u7c64\u5143\u7d20\uff0c\u9032\u800c\u56de\u50b3 Element \u578b\u614b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://i.imgur.com/3aTaXEv.png",alt:"Image"})),(0,s.kt)("p",null,"\u8981\u662f\u76f4\u63a5\u544a\u8a34 TypeScript\uff0c\u6211\u5011\u8981\u53d6\u5f97\u7684\u662f span \u6216 p\uff0cTypeScript \u5c31\u6703\u77e5\u9053\u8981\u56de\u50b3\u8a72\u5143\u7d20\u7684\u578b\u614b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://i.imgur.com/pDhj7uX.png",alt:"Image"})),(0,s.kt)("p",null,"\u6240\u4ee5\u8981\u7528 ID \u3001 Class \u6216\u5176\u4ed6\u9078\u64c7\u5668\u53d6\u5f97\u5143\u7d20\u7684\u8a71\uff0c\u6703\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"as")," \u95dc\u9375\u5b57\uff0c\u4e5f\u5c31\u662f\u65b7\u8a00(Assertion)\uff0c\u76f4\u63a5\u5b9a\u7fa9\u578b\u614b\uff0c\u56e0\u70ba\u6211\u5011\u77e5\u9053\u8981\u53d6\u5f97\u7684\u5143\u7d20\u662f\u4ec0\u9ebc\u578b\u614b\uff0c\u4f46 TypeScript \u4e0d\u77e5\u9053\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'const spanId = document.querySelector("#span") as HTMLSpanElement;\nconst pId = document.querySelector("#p") as HTMLParagraphElement;\n')),(0,s.kt)("p",null,"\u4f60\u53ef\u80fd\u4e5f\u6709\u770b\u904e\u9019\u6a23\u7684\u5beb\u6cd5\uff0c\u9019\u6a23\u5beb\u4e5f\u662f\u5c6c\u65bc\u65b7\u8a00\u7684\u4e00\u7a2e\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'const spanId = <HTMLSpanElement>document.querySelector("#span");\nconst pId = <HTMLParagraphElement>document.querySelector("#p");\n')),(0,s.kt)("h2",{id:"index-signatures--keyof-assertions"},"Index Signatures & keyof Assertions"),(0,s.kt)("p",null,"\u5047\u8a2d\u4eca\u5929\u6709\u4e00\u7269\u4ef6\uff0c\u540d\u70ba ",(0,s.kt)("inlineCode",{parentName:"p"},"bill"),"\uff0c\u800c\u8a72\u7269\u4ef6\u5c0d\u61c9\u7684\u578b\u614b\u70ba ",(0,s.kt)("inlineCode",{parentName:"p"},"Menu"),"\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"interface Menu {\n  Pizza: number;\n  Burger: number;\n  Water: number;\n}\n\nconst bill: Menu = {\n  Pizza: 200,\n  Burger: 120,\n  Water: 30,\n};\n\nconsole.log(bill.Pizza); //200\n")),(0,s.kt)("p",null,"\u5982\u679c\u4eca\u5929\u9700\u8981\u5c07 bill \u7269\u4ef6\u5167\u7684\u503c\u5168\u90e8\u52a0\u8d77\u4f86\uff0c\u53ef\u80fd\u6703\u9019\u6a23\u505a\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"interface Menu {\n  Pizza: number;\n  Burger: number;\n  Water: number;\n}\n\nconst bill: Menu = {\n  Pizza: 200,\n  Burger: 120,\n  Water: 30,\n};\n\nconst todayBill = (): number => {\n  let total = 0;\n  for (const billKey in bill) {\n    // No index signature with a parameter of type 'string' was found on type 'Menu'.\n    total += bill[billKey];\n  }\n\n  return total;\n};\n")),(0,s.kt)("p",null,"\u4f46 TypeScript \u6703\u8df3\u51fa\u932f\u8aa4\u63d0\u793a\uff0c\u8aaa\u6211\u5011\u6c92\u6709\u6dfb\u52a0 ",(0,s.kt)("inlineCode",{parentName:"p"},"index signature"),"\uff0c\u9019\u901a\u5e38\u6703\u5728\u52d5\u614b\u8f09\u5165\u7684\u60c5\u6cc1\u4e0b\u767c\u751f\u3002"),(0,s.kt)("p",null,"\u8981\u4fee\u6b63\u9019\u500b\u932f\u8aa4\u53ea\u8981\u6dfb\u52a0 ",(0,s.kt)("inlineCode",{parentName:"p"},"index signature")," \u5373\u53ef\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"interface Menu {\n  [index: string]: number;\n}\n\nconst bill: Menu = {\n  Pizza: 200,\n  Burger: 120,\n  Water: 30,\n};\n\nconst todayBill = (): number => {\n  let total = 0;\n  for (const billKey in bill) {\n    total += bill[billKey];\n  }\n\n  return total;\n};\n\nconsole.log(todayBill());\n")),(0,s.kt)("p",null,"\u9019\u6a23\u5beb\u7684\u610f\u601d\u662f\u6211\u5011\u7684\u7269\u4ef6\u5167\u7684 key \u90fd\u662f string\uff0c\u800c key \u5c0d\u61c9\u7684\u503c\u90fd\u662f number\u3002"),(0,s.kt)("p",null,"\u5982\u679c\u4e0d\u60f3\u63d0\u4f9b index signature \u7684\u8a71\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"keyof")," \u53d6\u4ee3\u4e4b\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"interface Menu {\n  Pizza: number;\n  Burger: number;\n  Water: number;\n}\n\nconst bill: Menu = {\n  Pizza: 200,\n  Burger: 120,\n  Water: 30,\n};\n\nconst todayBill = (): number => {\n  let total = 0;\n  for (const billKey in bill) {\n    total += bill[billKey as keyof Menu];\n  }\n\n  return total;\n};\n\nconsole.log(todayBill());\n")),(0,s.kt)("p",null,"\u6216\u662f\u642d\u914d ",(0,s.kt)("inlineCode",{parentName:"p"},"typeof")," \u76f4\u63a5\u5f9e\u7269\u4ef6\u53d6\u5f97 type\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},"interface Menu {\n  Pizza: number;\n  Burger: number;\n  Water: number;\n}\n\nconst bill: Menu = {\n  Pizza: 200,\n  Burger: 120,\n  Water: 30,\n};\n\nconst todayBill = (): number => {\n  let total = 0;\n  for (const billKey in bill) {\n    total += bill[billKey as keyof typeof bill];\n  }\n\n  return total;\n};\n\nconsole.log(todayBill());\n")),(0,s.kt)("h2",{id:"utility-types"},"Utility Types"),(0,s.kt)("h3",{id:"partial"},"Partial"),(0,s.kt)("p",null,"\u5982\u679c\u53ea\u60f3\u63d0\u53d6\u7269\u4ef6\u5167\u90e8\u5206\u7684\u503c\uff0c\u4e0d\u60f3\u5168\u90e8\u63d0\u53d6\u7684\u8a71\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Partial")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'interface Assignment {\n  studentId: string;\n  title: string;\n  grade: number;\n  verified?: boolean;\n}\n\nconst updateAssignment = (\n  assign: Assignment,\n  propsToUpdate: Partial<Assignment>\n): Assignment => {\n  return { ...assign, ...propsToUpdate };\n};\n\nconst assign1: Assignment = {\n  studentId: "1",\n  title: "Project",\n  grade: 0,\n};\n\nconst assignGraded: Assignment = updateAssignment(assign1, { grade: 100 });\n')),(0,s.kt)("h3",{id:"required"},"Required"),(0,s.kt)("p",null,"\u5982\u679c\u5728\u7269\u4ef6\u578b\u614b\u5167\u6709\u4f7f\u7528\u5230 ",(0,s.kt)("inlineCode",{parentName:"p"},"?")," \u53ef\u9078\u95dc\u9375\u5b57\uff0c\u4f46\u53c8\u60f3\u8b93\u67d0\u500b\u7269\u4ef6\u8b8a\u6578\u5fc5\u9808\u5c07\u6240\u6709\u578b\u614b\u90fd\u5b9a\u7fa9\u4e14\u9644\u503c\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Required")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'interface Assignment {\n  studentId: string;\n  title: string;\n  grade: number;\n  verified?: boolean;\n}\n\nconst assign1: Assignment = {\n  studentId: "1",\n  title: "Project",\n  grade: 100,\n};\n\n//\u56e0\u70ba\u6709\u4f7f\u7528\u5230 Required\uff0c\u6240\u4ee5 assign2 \u5fc5\u9808\u5b9a\u7fa9 verified\u3002\nconst assign2: Required<Assignment> = {\n  studentId: "1",\n  title: "Project",\n  grade: 100,\n  verified: true,\n};\n')),(0,s.kt)("h3",{id:"record"},"Record"),(0,s.kt)("p",null,"\u5982\u679c\u60f3\u9650\u5236\u8b8a\u6578\u5167\u80fd\u4f7f\u7528\u7684 key \u548c value \u7684 type\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Record")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'const hexColorMap: Record<string, string> = {\n  red: "FF0000",\n  green: "00FF00",\n  blue: "0000FF",\n};\n')),(0,s.kt)("p",null,"\u540c\u6a23\u7684\u4e5f\u53ef\u4ee5\u9650\u5236\u80fd\u8f38\u5165\u7684\u503c\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'type Students = "Wei" | "Yun";\ntype Grades = "A" | "B" | "C" | "D";\n\n// key \u53ea\u80fd\u662f Wei \u6216 Yun\n// value \u53ea\u80fd\u662f A B C D\nconst finalGrades: Record<Students, Grades> = {\n  Wei: "A",\n  Yun: "B",\n};\n')),(0,s.kt)("p",null,"\u6539\u70ba interface\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'type Students = "Wei" | "Yun";\n\ninterface Grades {\n  assign1: number;\n  assign2: number;\n}\n\nconst finalGrades: Record<Students, Grades> = {\n  Wei: {\n    assign1: 100,\n    assign2: 90,\n  },\n  Yun: {\n    assign1: 95,\n    assign2: 90,\n  },\n};\n')),(0,s.kt)("h3",{id:"pick"},"Pick"),(0,s.kt)("p",null,"\u5982\u679c\u60f3\u9650\u5236\u8b8a\u6578\u80fd\u4f7f\u7528\u7684 key\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Pick")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'interface Assignment {\n  studentId: string;\n  title: string;\n  grade: number;\n  verified?: boolean;\n}\n\ntype AssignResult = Pick<Assignment, "studentId" | "grade">;\n\n// score \u7269\u4ef6\u53ea\u80fd\u5b9a\u7fa9 studentId \u548c grade\nconst score: AssignResult = {\n  studentId: "1",\n  grade: 100,\n};\n')),(0,s.kt)("h3",{id:"omit"},"Omit"),(0,s.kt)("p",null,"\u540c\u4e0a\uff0c\u5982\u679c\u60f3\u8b93\u8b8a\u6578\u4e0d\u80fd\u4f7f\u7528\u7279\u5b9a key \u7684\u8a71\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Omit")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'interface Assignment {\n  studentId: string;\n  title: string;\n  grade: number;\n  verified?: boolean;\n}\n\ntype AssignResult = Omit<Assignment, "studentId" | "grade">;\n\n// score \u7269\u4ef6\u4e0d\u80fd\u5b9a\u7fa9 studentId \u548c grade\nconst score: AssignResult = {\n  title: "Project",\n};\n')),(0,s.kt)("h3",{id:"exclude"},"Exclude"),(0,s.kt)("p",null,"\u5982\u679c\u60f3\u628a\u67d0\u500b\u503c\u6392\u9664\u5728\u5916\u7684\u8a71\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Exclude")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'type Grades = "A" | "B" | "C" | "D";\n\n// type adjustedGrade = "A" | "B" | "C"\ntype adjustedGrade = Exclude<Grades, "D">;\n')),(0,s.kt)("h3",{id:"extract"},"Extract"),(0,s.kt)("p",null,"\u5982\u679c\u60f3\u628a\u67d0\u500b\u503c\u63d0\u53d6\u51fa\u4f86\u7684\u8a71\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"Extract")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'type Grades = "A" | "B" | "C" | "D";\n\n// type highGrade = "A" | "B"\ntype highGrade = Extract<Grades, "A" | "B">;\n')),(0,s.kt)("h3",{id:"nonnullable"},"NonNullable"),(0,s.kt)("p",null,"\u5982\u679c\u60f3\u6392\u9664 ",(0,s.kt)("inlineCode",{parentName:"p"},"undefined")," \u548c ",(0,s.kt)("inlineCode",{parentName:"p"},"null")," \u7684\u8a71\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"NonNullable")," \u95dc\u9375\u5b57\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='src/main.ts' showLineNumbers",title:"'src/main.ts'",showLineNumbers:!0},'type Grades = "A" | "B" | "C" | "D" | undefined | null;\n\n// type onlyValidValues = "A" | "B" | "C" | "D"\ntype onlyValidValues = NonNullable<Grades>;\n')))}u.isMDXComponent=!0}}]);